<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            font-family: Arial, sans-serif;
        }

        #game-board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-gap: 0px;
            color: #000;
        }

        .box {
            width: 100px;
            height: 100px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            border: 1px solid #333;
            cursor: pointer;
        }

        .box:hover {
            background-color: #f0f0f0;
        }
        .reset-button{
            /* height: 45px;
            width: 100px;
            cursor: pointer; */
            display: none;
        }
    </style>
</head>
<body>
    <h1>Tic-Tac-Toe</h1>
    <h1 id="symbol"></h1>
    <div id="game-board">
        <div class="box" data-index="0"></div>
        <div class="box" data-index="1"></div>
        <div class="box" data-index="2"></div>
        <div class="box" data-index="3"></div>
        <div class="box" data-index="4"></div>
        <div class="box" data-index="5"></div>
        <div class="box" data-index="6"></div>
        <div class="box" data-index="7"></div>
        <div class="box" data-index="8"></div>
    </div>
   
    <h1 class="message"></h2>

    <button class="reset-button" type="submit" onclick="resetGame()" >Play Again</button>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        let playerSymbol = null;
        const socket = io();
        socket.on('playerAssigned', (symbol) => {
            playerSymbol = symbol; 
            document.getElementById('symbol').innerText = `You are Player ${symbol}`;
        });
        socket.on('boardUpdated', ({ board, currentPlayer }) => {
            const cells = document.querySelectorAll('.box'); 
            board.forEach((symbol, index) => {
                cells[index].innerText = symbol || '';  
            });

            document.querySelector('.message').innerText = `Player ${currentPlayer}'s turn`;
            document.querySelector('.reset-button').style.display = 'none';
        });

        socket.on('gameOver', ({ winner, board }) => {
            const cells = document.querySelectorAll('.box');
            board.forEach((symbol, index) => {
                cells[index].innerText = symbol || '';  
            });

            if (winner) {
                document.querySelector('.message').innerText = `Player ${winner} wins!`;
            } else {
                document.querySelector('.message').innerText = `It's a draw!`;
            }

            document.querySelector('.reset-button').style.display = 'block';
        });



       
        document.querySelectorAll('.box').forEach(cell => {
            cell.addEventListener('click', () => {
                const index = cell.getAttribute('data-index');                
                if (!cell.innerText && playerSymbol) {
                    socket.emit('makeMove', index); 
                }
            });
        });
   
        
        function resetGame() {
            document.querySelectorAll('.box').forEach(cell => {
                cell.innerText = '';
            });

            document.querySelector('.reset-button').style.display = 'none'; // Hide reset button
            document.querySelector('.message').innerText = '';

            socket.emit('resetGame');
        }
   
   </script>
</body>
</html>
